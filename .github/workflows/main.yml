name: Deploy to Minikube on AWS

# on:
#   push:
#     branches:
#       - main

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-devops-app:latest

  deploy-to-aws:
    name: Provision and Deploy to AWS
    runs-on: ubuntu-latest
    needs: build-and-push-docker # This job runs only after the docker image is pushed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Must match your terraform region

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Get instance IP
        id: get_ip
        run: echo "INSTANCE_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Deploy to Minikube
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            # Wait for Minikube to be ready
            echo "Waiting for Minikube to be ready..."
            sleep 60 

            # Update the image in the deployment manifest
            # This command finds and replaces the placeholder with your actual Docker Hub username
            sed -i 's|yourdockerhubusername|${{ secrets.DOCKERHUB_USERNAME }}|g' k8s/deployment.yaml

            # Apply the kubernetes manifests
            sudo -u ubuntu kubectl apply -f k8s/deployment.yaml
            sudo -u ubuntu kubectl apply -f k8s/service.yaml
            echo "Deployment successful!"
